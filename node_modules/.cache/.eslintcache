[{"C:\\Projects\\SDE\\Study_Notion-main\\src\\index.js":"1","C:\\Projects\\SDE\\Study_Notion-main\\src\\App.jsx":"2","C:\\Projects\\SDE\\Study_Notion-main\\src\\reducer\\index.js":"3","C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\constants.js":"4","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\About.jsx":"5","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Dashboard.jsx":"6","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Catalog.jsx":"7","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Contact.jsx":"8","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Error.jsx":"9","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Signup.jsx":"10","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Login.jsx":"11","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Home.jsx":"12","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\CourseDetails.jsx":"13","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\ForgotPassword.jsx":"14","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\UpdatePassword.jsx":"15","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\ViewCourse.jsx":"16","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\VerifyEmail.jsx":"17","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\profileAPI.js":"18","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Navbar.jsx":"19","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Instructor.jsx":"20","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\EnrolledCourses.jsx":"21","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\MyCourses.jsx":"22","C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\courseSlice.js":"23","C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\cartSlice.js":"24","C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\profileSlice.js":"25","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\OpenRoute.jsx":"26","C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\authSlice.js":"27","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\PrivateRoute.jsx":"28","C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\viewCourseSlice.js":"29","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\MyProfile.jsx":"30","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\VideoDetails.jsx":"31","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\index.jsx":"32","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\index.jsx":"33","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\EditCourse\\index.jsx":"34","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\index.jsx":"35","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\apis.js":"36","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\apiConnector.js":"37","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\pageAndComponntDatas.js":"38","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\formatDate.js":"39","C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\avgRating.js":"40","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\courseDetailsAPI.js":"41","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\studentFeaturesAPI.js":"42","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\authAPI.js":"43","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\ReviewSlider.jsx":"44","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Footer.jsx":"45","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\Template.jsx":"46","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Sidebar.jsx":"47","C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\dateFormatter.js":"48","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\Quote.jsx":"49","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\ContactFormSection.jsx":"50","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\Stats.jsx":"51","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\LearningGrid.jsx":"52","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\HighlightText.jsx":"53","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\Button.jsx":"54","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\CodeBlocks.jsx":"55","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\ExploreMore.jsx":"56","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\InstructorSection.jsx":"57","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\LearningLanguageSection.jsx":"58","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Catalog\\Course_Card.jsx":"59","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Catalog\\Course_Slider.jsx":"60","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\RatingStars.jsx":"61","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\ConfirmationModal.jsx":"62","C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\navbar-links.js":"63","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactDetails.jsx":"64","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\CourseReviewModal.jsx":"65","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactForm.jsx":"66","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\Timeline.jsx":"67","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseAccordionBar.jsx":"68","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\VideoDetailsSidebar.jsx":"69","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\ProfileDropdown.jsx":"70","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseDetailsCard.jsx":"71","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\IconBtn.jsx":"72","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\InstructorDashboard\\InstructorChart.jsx":"73","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\InstructorCourses\\CoursesTable.jsx":"74","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\RenderTotalAmount.jsx":"75","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\RenderCartCourses.jsx":"76","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\RenderSteps.jsx":"77","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\EditProfile.jsx":"78","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\DeleteAccount.jsx":"79","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\ChangeProfilePicture.jsx":"80","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\UpdatePassword.jsx":"81","C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\footer-links.js":"82","C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\dashboard-links.js":"83","C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\homepage-explore.js":"84","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\LoginForm.jsx":"85","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\SignupForm.jsx":"86","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\SidebarLink.jsx":"87","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactUsForm.jsx":"88","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseSubSectionAccordion.jsx":"89","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\CourseCard.jsx":"90","C:\\Projects\\SDE\\Study_Notion-main\\src\\hooks\\useOnClickOutside.js":"91","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\SettingsAPI.js":"92","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\CourseInformationForm.jsx":"93","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\CourseBuilderForm.jsx":"94","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\PublishCourse\\index.jsx":"95","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Tab.jsx":"96","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\Upload.jsx":"97","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\ChipInput.jsx":"98","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\RequirementsField.jsx":"99","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\NestedView.jsx":"100","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\SubSectionModal.jsx":"101"},{"size":629,"mtime":1723042202099,"results":"102","hashOfConfig":"103"},{"size":5226,"mtime":1723042202057,"results":"104","hashOfConfig":"103"},{"size":518,"mtime":1723042203624,"results":"105","hashOfConfig":"103"},{"size":188,"mtime":1723042203859,"results":"106","hashOfConfig":"103"},{"size":6351,"mtime":1723042203494,"results":"107","hashOfConfig":"103"},{"size":851,"mtime":1723042203533,"results":"108","hashOfConfig":"103"},{"size":4745,"mtime":1723042203504,"results":"109","hashOfConfig":"103"},{"size":1092,"mtime":1723042203515,"results":"110","hashOfConfig":"103"},{"size":193,"mtime":1723042203545,"results":"111","hashOfConfig":"103"},{"size":457,"mtime":1723042203577,"results":"112","hashOfConfig":"103"},{"size":403,"mtime":1723042203567,"results":"113","hashOfConfig":"103"},{"size":7945,"mtime":1723042203563,"results":"114","hashOfConfig":"103"},{"size":9776,"mtime":1723042203525,"results":"115","hashOfConfig":"103"},{"size":2636,"mtime":1723042203554,"results":"116","hashOfConfig":"103"},{"size":4394,"mtime":1723042203589,"results":"117","hashOfConfig":"103"},{"size":1869,"mtime":1723042203605,"results":"118","hashOfConfig":"103"},{"size":3492,"mtime":1723042203597,"results":"119","hashOfConfig":"103"},{"size":2684,"mtime":1723042203748,"results":"120","hashOfConfig":"103"},{"size":6659,"mtime":1723042202645,"results":"121","hashOfConfig":"103"},{"size":5542,"mtime":1723042202924,"results":"122","hashOfConfig":"103"},{"size":3862,"mtime":1723042202915,"results":"123","hashOfConfig":"103"},{"size":1270,"mtime":1723042202934,"results":"124","hashOfConfig":"103"},{"size":893,"mtime":1723042203800,"results":"125","hashOfConfig":"103"},{"size":2436,"mtime":1723042203785,"results":"126","hashOfConfig":"103"},{"size":475,"mtime":1723042203814,"results":"127","hashOfConfig":"103"},{"size":398,"mtime":1723042202754,"results":"128","hashOfConfig":"103"},{"size":670,"mtime":1723042203778,"results":"129","hashOfConfig":"103"},{"size":393,"mtime":1723042202765,"results":"130","hashOfConfig":"103"},{"size":1052,"mtime":1723042203827,"results":"131","hashOfConfig":"103"},{"size":4513,"mtime":1723042202944,"results":"132","hashOfConfig":"103"},{"size":8106,"mtime":1723042203366,"results":"133","hashOfConfig":"103"},{"size":1086,"mtime":1723042203134,"results":"134","hashOfConfig":"103"},{"size":1553,"mtime":1723042202995,"results":"135","hashOfConfig":"103"},{"size":1622,"mtime":1723042203157,"results":"136","hashOfConfig":"103"},{"size":593,"mtime":1723042203254,"results":"137","hashOfConfig":"103"},{"size":2776,"mtime":1723042203664,"results":"138","hashOfConfig":"103"},{"size":354,"mtime":1723042203644,"results":"139","hashOfConfig":"103"},{"size":736,"mtime":1723042203734,"results":"140","hashOfConfig":"103"},{"size":473,"mtime":1723042203676,"results":"141","hashOfConfig":"103"},{"size":369,"mtime":1723042203844,"results":"142","hashOfConfig":"103"},{"size":11574,"mtime":1723042203723,"results":"143","hashOfConfig":"103"},{"size":4019,"mtime":1723042203759,"results":"144","hashOfConfig":"103"},{"size":5136,"mtime":1723042203707,"results":"145","hashOfConfig":"103"},{"size":3675,"mtime":1723042202669,"results":"146","hashOfConfig":"103"},{"size":6730,"mtime":1723042202626,"results":"147","hashOfConfig":"103"},{"size":1836,"mtime":1723042202793,"results":"148","hashOfConfig":"103"},{"size":2613,"mtime":1723042202953,"results":"149","hashOfConfig":"103"},{"size":169,"mtime":1723042203864,"results":"150","hashOfConfig":"103"},{"size":811,"mtime":1723042202717,"results":"151","hashOfConfig":"103"},{"size":507,"mtime":1723042202694,"results":"152","hashOfConfig":"103"},{"size":996,"mtime":1723042202725,"results":"153","hashOfConfig":"103"},{"size":3030,"mtime":1723042202705,"results":"154","hashOfConfig":"103"},{"size":273,"mtime":1723042203307,"results":"155","hashOfConfig":"103"},{"size":531,"mtime":1723042203264,"results":"156","hashOfConfig":"103"},{"size":2163,"mtime":1723042203278,"results":"157","hashOfConfig":"103"},{"size":2590,"mtime":1723042203295,"results":"158","hashOfConfig":"103"},{"size":1462,"mtime":1723042203319,"results":"159","hashOfConfig":"103"},{"size":1809,"mtime":1723042203328,"results":"160","hashOfConfig":"103"},{"size":2096,"mtime":1723042202806,"results":"161","hashOfConfig":"103"},{"size":1161,"mtime":1723042202816,"results":"162","hashOfConfig":"103"},{"size":1062,"mtime":1723042202660,"results":"163","hashOfConfig":"103"},{"size":1038,"mtime":1723042202615,"results":"164","hashOfConfig":"103"},{"size":257,"mtime":1723042203446,"results":"165","hashOfConfig":"103"},{"size":1493,"mtime":1723042202835,"results":"166","hashOfConfig":"103"},{"size":4084,"mtime":1723042203358,"results":"167","hashOfConfig":"103"},{"size":597,"mtime":1723042202845,"results":"168","hashOfConfig":"103"},{"size":3255,"mtime":1723042203338,"results":"169","hashOfConfig":"103"},{"size":1957,"mtime":1723042202875,"results":"170","hashOfConfig":"103"},{"size":5069,"mtime":1723042203374,"results":"171","hashOfConfig":"103"},{"size":2176,"mtime":1723042202774,"results":"172","hashOfConfig":"103"},{"size":3943,"mtime":1723042202884,"results":"173","hashOfConfig":"103"},{"size":664,"mtime":1723042202639,"results":"174","hashOfConfig":"103"},{"size":2767,"mtime":1723042203195,"results":"175","hashOfConfig":"103"},{"size":6771,"mtime":1723042203176,"results":"176","hashOfConfig":"103"},{"size":1105,"mtime":1723042203129,"results":"177","hashOfConfig":"103"},{"size":2537,"mtime":1723042203117,"results":"178","hashOfConfig":"103"},{"size":2670,"mtime":1723042202975,"results":"179","hashOfConfig":"103"},{"size":7239,"mtime":1723042203235,"results":"180","hashOfConfig":"103"},{"size":1661,"mtime":1723042203224,"results":"181","hashOfConfig":"103"},{"size":3123,"mtime":1723042203215,"results":"182","hashOfConfig":"103"},{"size":4140,"mtime":1723042203244,"results":"183","hashOfConfig":"103"},{"size":2138,"mtime":1723042203414,"results":"184","hashOfConfig":"103"},{"size":911,"mtime":1723042203405,"results":"185","hashOfConfig":"103"},{"size":4743,"mtime":1723042203434,"results":"186","hashOfConfig":"103"},{"size":2635,"mtime":1723042202745,"results":"187","hashOfConfig":"103"},{"size":6162,"mtime":1723042202784,"results":"188","hashOfConfig":"103"},{"size":1187,"mtime":1723042202964,"results":"189","hashOfConfig":"103"},{"size":5448,"mtime":1723042202858,"results":"190","hashOfConfig":"103"},{"size":525,"mtime":1723042202895,"results":"191","hashOfConfig":"103"},{"size":1502,"mtime":1723042203288,"results":"192","hashOfConfig":"103"},{"size":1151,"mtime":1723042203465,"results":"193","hashOfConfig":"103"},{"size":3672,"mtime":1723042203694,"results":"194","hashOfConfig":"103"},{"size":11397,"mtime":1723042203063,"results":"195","hashOfConfig":"103"},{"size":4759,"mtime":1723042203014,"results":"196","hashOfConfig":"103"},{"size":3349,"mtime":1723042203095,"results":"197","hashOfConfig":"103"},{"size":701,"mtime":1723042202675,"results":"198","hashOfConfig":"103"},{"size":3943,"mtime":1723042202988,"results":"199","hashOfConfig":"103"},{"size":3530,"mtime":1723042203054,"results":"200","hashOfConfig":"103"},{"size":2575,"mtime":1723042203074,"results":"201","hashOfConfig":"103"},{"size":7077,"mtime":1723042203025,"results":"202","hashOfConfig":"103"},{"size":7157,"mtime":1723042203036,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g7riuk",{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428"},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481"},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524"},"C:\\Projects\\SDE\\Study_Notion-main\\src\\index.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\App.jsx",[],["525"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\reducer\\index.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\constants.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\About.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Dashboard.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Catalog.jsx",["526","527","528"],[],"import React, { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\n\n// import CourseCard from \"../components/Catalog/CourseCard\"\n// import CourseSlider from \"../components/Catalog/CourseSlider\"\nimport Footer from \"../components/Common/Footer\"\nimport Course_Card from \"../components/core/Catalog/Course_Card\"\nimport Course_Slider from \"../components/core/Catalog/Course_Slider\"\nimport { apiConnector } from \"../services/apiConnector\"\nimport { categories } from \"../services/apis\"\nimport { getCatalogPageData } from \"../services/operations/pageAndComponntDatas\"\nimport Error from \"./Error\"\n\nfunction Catalog() {\n  const { loading } = useSelector((state) => state.profile)\n  const { catalogName } = useParams()\n  const [active, setActive] = useState(1)\n  const [catalogPageData, setCatalogPageData] = useState(null)\n  const [categoryId, setCategoryId] = useState(\"\")\n  // Fetch All Categories\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const res = await apiConnector(\"GET\", categories.CATEGORIES_API)\n        const category_id = res?.data?.data?.filter(\n          (ct) => ct.name.split(\" \").join(\"-\").toLowerCase() === catalogName\n        )[0]._id\n        setCategoryId(category_id)\n      } catch (error) {\n        console.log(\"Could not fetch Categories.\", error)\n      }\n    })()\n  }, [catalogName])\n  useEffect(() => {\n    if (categoryId) {\n      ;(async () => {\n        try {\n          const res = await getCatalogPageData(categoryId)\n          setCatalogPageData(res)\n        } catch (error) {\n          console.log(error)\n        }\n      })()\n    }\n  }, [categoryId])\n\n  if (loading || !catalogPageData) {\n    return (\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\n        <div className=\"spinner\"></div>\n      </div>\n    )\n  }\n  if (!loading && !catalogPageData.success) {\n    return <Error />\n  }\n\n  return (\n    <>\n      {/* Hero Section */}\n      <div className=\" box-content bg-richblack-800 px-4\">\n        <div className=\"mx-auto flex min-h-[260px] max-w-maxContentTab flex-col justify-center gap-4 lg:max-w-maxContent \">\n          <p className=\"text-sm text-richblack-300\">\n            {`Home / Catalog / `}\n            <span className=\"text-yellow-25\">\n              {catalogPageData?.data?.selectedCategory?.name}\n            </span>\n          </p>\n          <p className=\"text-3xl text-richblack-5\">\n            {catalogPageData?.data?.selectedCategory?.name}\n          </p>\n          <p className=\"max-w-[870px] text-richblack-200\">\n            {catalogPageData?.data?.selectedCategory?.description}\n          </p>\n        </div>\n      </div>\n\n      {/* Section 1 */}\n      <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\n        <div className=\"section_heading\">Courses to get you started</div>\n        <div className=\"my-4 flex border-b border-b-richblack-600 text-sm\">\n          <p\n            className={`px-4 py-2 ${\n              active === 1\n                ? \"border-b border-b-yellow-25 text-yellow-25\"\n                : \"text-richblack-50\"\n            } cursor-pointer`}\n            onClick={() => setActive(1)}\n          >\n            Most Populer\n          </p>\n          <p\n            className={`px-4 py-2 ${\n              active === 2\n                ? \"border-b border-b-yellow-25 text-yellow-25\"\n                : \"text-richblack-50\"\n            } cursor-pointer`}\n            onClick={() => setActive(2)}\n          >\n            New\n          </p>\n        </div>\n        <div>\n          <Course_Slider\n            Courses={catalogPageData?.data?.selectedCategory?.courses}\n          />\n        </div>\n      </div>\n      {/* Section 2 */}\n      <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\n        <div className=\"section_heading\">\n          Top courses in {catalogPageData?.data?.differentCategory?.name}\n        </div>\n        <div className=\"py-8\">\n          <Course_Slider\n            Courses={catalogPageData?.data?.differentCategory?.courses}\n          />\n        </div>\n      </div>\n\n      {/* Section 3 */}\n      <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\n        <div className=\"section_heading\">Frequently Bought</div>\n        <div className=\"py-8\">\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n            {catalogPageData?.data?.mostSellingCourses\n              ?.slice(0, 4)\n              .map((course, i) => (\n                <Course_Card course={course} key={i} Height={\"h-[400px]\"} />\n              ))}\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default Catalog\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Contact.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Error.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Signup.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Login.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\Home.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\CourseDetails.jsx",["529","530"],[],"import React, { useEffect, useState } from \"react\"\nimport { BiInfoCircle } from \"react-icons/bi\"\nimport { HiOutlineGlobeAlt } from \"react-icons/hi\"\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport ConfirmationModal from \"../components/Common/ConfirmationModal\"\nimport Footer from \"../components/Common/Footer\"\nimport RatingStars from \"../components/Common/RatingStars\"\nimport CourseAccordionBar from \"../components/core/Course/CourseAccordionBar\"\nimport CourseDetailsCard from \"../components/core/Course/CourseDetailsCard\"\nimport { formatDate } from \"../services/formatDate\"\nimport { fetchCourseDetails } from \"../services/operations/courseDetailsAPI\"\nimport { BuyCourse } from \"../services/operations/studentFeaturesAPI\"\nimport GetAvgRating from \"../utils/avgRating\"\nimport Error from \"./Error\"\n\nfunction CourseDetails() {\n  const { user } = useSelector((state) => state.profile)\n  const { token } = useSelector((state) => state.auth)\n  const { loading } = useSelector((state) => state.profile)\n  const { paymentLoading } = useSelector((state) => state.course)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  // Getting courseId from url parameter\n  const { courseId } = useParams()\n  // console.log(`course id: ${courseId}`)\n\n  // Declear a state to save the course details\n  const [response, setResponse] = useState(null)\n  const [confirmationModal, setConfirmationModal] = useState(null)\n  useEffect(() => {\n    // Calling fetchCourseDetails fucntion to fetch the details\n    ;(async () => {\n      try {\n        const res = await fetchCourseDetails(courseId)\n        // console.log(\"course details res: \", res)\n        setResponse(res)\n      } catch (error) {\n        console.log(\"Could not fetch Course Details\")\n      }\n    })()\n  }, [courseId])\n\n  // console.log(\"response: \", response)\n\n  // Calculating Avg Review count\n  const [avgReviewCount, setAvgReviewCount] = useState(0)\n  useEffect(() => {\n    const count = GetAvgRating(response?.data?.courseDetails.ratingAndReviews)\n    setAvgReviewCount(count)\n  }, [response])\n  // console.log(\"avgReviewCount: \", avgReviewCount)\n\n  // // Collapse all\n  // const [collapse, setCollapse] = useState(\"\")\n  const [isActive, setIsActive] = useState(Array(0))\n  const handleActive = (id) => {\n    // console.log(\"called\", id)\n    setIsActive(\n      !isActive.includes(id)\n        ? isActive.concat([id])\n        : isActive.filter((e) => e != id)\n    )\n  }\n\n  // Total number of lectures\n  const [totalNoOfLectures, setTotalNoOfLectures] = useState(0)\n  useEffect(() => {\n    let lectures = 0\n    response?.data?.courseDetails?.courseContent?.forEach((sec) => {\n      lectures += sec.subSection.length || 0\n    })\n    setTotalNoOfLectures(lectures)\n  }, [response])\n\n  if (loading || !response) {\n    return (\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\n        <div className=\"spinner\"></div>\n      </div>\n    )\n  }\n  if (!response.success) {\n    return <Error />\n  }\n\n  const {\n    _id: course_id,\n    courseName,\n    courseDescription,\n    thumbnail,\n    price,\n    whatYouWillLearn,\n    courseContent,\n    ratingAndReviews,\n    instructor,\n    studentsEnroled,\n    createdAt,\n  } = response.data?.courseDetails\n\n  const handleBuyCourse = () => {\n    if (token) {\n      BuyCourse(token, [courseId], user, navigate, dispatch)\n      return\n    }\n    setConfirmationModal({\n      text1: \"You are not logged in!\",\n      text2: \"Please login to Purchase Course.\",\n      btn1Text: \"Login\",\n      btn2Text: \"Cancel\",\n      btn1Handler: () => navigate(\"/login\"),\n      btn2Handler: () => setConfirmationModal(null),\n    })\n  }\n\n  if (paymentLoading) {\n    // console.log(\"payment loading\")\n    return (\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\n        <div className=\"spinner\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className={`relative w-full bg-richblack-800`}>\n        {/* Hero Section */}\n        <div className=\"mx-auto box-content px-4 lg:w-[1260px] 2xl:relative \">\n          <div className=\"mx-auto grid min-h-[450px] max-w-maxContentTab justify-items-center py-8 lg:mx-0 lg:justify-items-start lg:py-0 xl:max-w-[810px]\">\n            <div className=\"relative block max-h-[30rem] lg:hidden\">\n              <div className=\"absolute bottom-0 left-0 h-full w-full shadow-[#161D29_0px_-64px_36px_-28px_inset]\"></div>\n              <img\n                src={thumbnail}\n                alt=\"course thumbnail\"\n                className=\"aspect-auto w-full\"\n              />\n            </div>\n            <div\n              className={`z-30 my-5 flex flex-col justify-center gap-4 py-5 text-lg text-richblack-5`}\n            >\n              <div>\n                <p className=\"text-4xl font-bold text-richblack-5 sm:text-[42px]\">\n                  {courseName}\n                </p>\n              </div>\n              <p className={`text-richblack-200`}>{courseDescription}</p>\n              <div className=\"text-md flex flex-wrap items-center gap-2\">\n                <span className=\"text-yellow-25\">{avgReviewCount}</span>\n                <RatingStars Review_Count={avgReviewCount} Star_Size={24} />\n                <span>{`(${ratingAndReviews.length} reviews)`}</span>\n                <span>{`${studentsEnroled.length} students enrolled`}</span>\n              </div>\n              <div>\n                <p className=\"\">\n                  Created By {`${instructor.firstName} ${instructor.lastName}`}\n                </p>\n              </div>\n              <div className=\"flex flex-wrap gap-5 text-lg\">\n                <p className=\"flex items-center gap-2\">\n                  {\" \"}\n                  <BiInfoCircle /> Created at {formatDate(createdAt)}\n                </p>\n                <p className=\"flex items-center gap-2\">\n                  {\" \"}\n                  <HiOutlineGlobeAlt /> English\n                </p>\n              </div>\n            </div>\n            <div className=\"flex w-full flex-col gap-4 border-y border-y-richblack-500 py-4 lg:hidden\">\n              <p className=\"space-x-3 pb-4 text-3xl font-semibold text-richblack-5\">\n                Rs. {price}\n              </p>\n              <button className=\"yellowButton\" onClick={handleBuyCourse}>\n                Buy Now\n              </button>\n              <button className=\"blackButton\">Add to Cart</button>\n            </div>\n          </div>\n          {/* Courses Card */}\n          <div className=\"right-[1rem] top-[60px] mx-auto hidden min-h-[600px] w-1/3 max-w-[410px] translate-y-24 md:translate-y-0 lg:absolute  lg:block\">\n            <CourseDetailsCard\n              course={response?.data?.courseDetails}\n              setConfirmationModal={setConfirmationModal}\n              handleBuyCourse={handleBuyCourse}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mx-auto box-content px-4 text-start text-richblack-5 lg:w-[1260px]\">\n        <div className=\"mx-auto max-w-maxContentTab lg:mx-0 xl:max-w-[810px]\">\n          {/* What will you learn section */}\n          <div className=\"my-8 border border-richblack-600 p-8\">\n            <p className=\"text-3xl font-semibold\">What you'll learn</p>\n            <div className=\"mt-5\">\n              <ReactMarkdown>{whatYouWillLearn}</ReactMarkdown>\n            </div>\n          </div>\n\n          {/* Course Content Section */}\n          <div className=\"max-w-[830px] \">\n            <div className=\"flex flex-col gap-3\">\n              <p className=\"text-[28px] font-semibold\">Course Content</p>\n              <div className=\"flex flex-wrap justify-between gap-2\">\n                <div className=\"flex gap-2\">\n                  <span>\n                    {courseContent.length} {`section(s)`}\n                  </span>\n                  <span>\n                    {totalNoOfLectures} {`lecture(s)`}\n                  </span>\n                  <span>{response.data?.totalDuration} total length</span>\n                </div>\n                <div>\n                  <button\n                    className=\"text-yellow-25\"\n                    onClick={() => setIsActive([])}\n                  >\n                    Collapse all sections\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Course Details Accordion */}\n            <div className=\"py-4\">\n              {courseContent?.map((course, index) => (\n                <CourseAccordionBar\n                  course={course}\n                  key={index}\n                  isActive={isActive}\n                  handleActive={handleActive}\n                />\n              ))}\n            </div>\n\n            {/* Author Details */}\n            <div className=\"mb-12 py-4\">\n              <p className=\"text-[28px] font-semibold\">Author</p>\n              <div className=\"flex items-center gap-4 py-4\">\n                <img\n                  src={\n                    instructor.image\n                      ? instructor.image\n                      : `https://api.dicebear.com/5.x/initials/svg?seed=${instructor.firstName} ${instructor.lastName}`\n                  }\n                  alt=\"Author\"\n                  className=\"h-14 w-14 rounded-full object-cover\"\n                />\n                <p className=\"text-lg\">{`${instructor.firstName} ${instructor.lastName}`}</p>\n              </div>\n              <p className=\"text-richblack-50\">\n                {instructor?.additionalDetails?.about}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\n    </>\n  )\n}\n\nexport default CourseDetails\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\ForgotPassword.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\UpdatePassword.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\ViewCourse.jsx",[],["531"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\pages\\VerifyEmail.jsx",[],["532"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\profileAPI.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Navbar.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Instructor.jsx",["533"],[],"import { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { fetchInstructorCourses } from \"../../../services/operations/courseDetailsAPI\"\r\nimport { getInstructorData } from \"../../../services/operations/profileAPI\"\r\nimport InstructorChart from \"./InstructorDashboard/InstructorChart\"\r\n\r\nexport default function Instructor() {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { user } = useSelector((state) => state.profile)\r\n  const [loading, setLoading] = useState(false)\r\n  const [instructorData, setInstructorData] = useState(null)\r\n  const [courses, setCourses] = useState([])\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      setLoading(true)\r\n      const instructorApiData = await getInstructorData(token)\r\n      const result = await fetchInstructorCourses(token)\r\n      console.log(instructorApiData)\r\n      if (instructorApiData.length) setInstructorData(instructorApiData)\r\n      if (result) {\r\n        setCourses(result)\r\n      }\r\n      setLoading(false)\r\n    })()\r\n  }, [])\r\n\r\n  const totalAmount = instructorData?.reduce(\r\n    (acc, curr) => acc + curr.totalAmountGenerated,\r\n    0\r\n  )\r\n\r\n  const totalStudents = instructorData?.reduce(\r\n    (acc, curr) => acc + curr.totalStudentsEnrolled,\r\n    0\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"space-y-2\">\r\n        <h1 className=\"text-2xl font-bold text-richblack-5\">\r\n          Hi {user?.firstName} 👋\r\n        </h1>\r\n        <p className=\"font-medium text-richblack-200\">\r\n          Let's start something new\r\n        </p>\r\n      </div>\r\n      {loading ? (\r\n        <div className=\"spinner\"></div>\r\n      ) : courses.length > 0 ? (\r\n        <div>\r\n          <div className=\"my-4 flex h-[450px] space-x-4\">\r\n            {/* Render chart / graph */}\r\n            {totalAmount > 0 || totalStudents > 0 ? (\r\n              <InstructorChart courses={instructorData} />\r\n            ) : (\r\n              <div className=\"flex-1 rounded-md bg-richblack-800 p-6\">\r\n                <p className=\"text-lg font-bold text-richblack-5\">Visualize</p>\r\n                <p className=\"mt-4 text-xl font-medium text-richblack-50\">\r\n                  Not Enough Data To Visualize\r\n                </p>\r\n              </div>\r\n            )}\r\n            {/* Total Statistics */}\r\n            <div className=\"flex min-w-[250px] flex-col rounded-md bg-richblack-800 p-6\">\r\n              <p className=\"text-lg font-bold text-richblack-5\">Statistics</p>\r\n              <div className=\"mt-4 space-y-4\">\r\n                <div>\r\n                  <p className=\"text-lg text-richblack-200\">Total Courses</p>\r\n                  <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                    {courses.length}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-lg text-richblack-200\">Total Students</p>\r\n                  <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                    {totalStudents}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-lg text-richblack-200\">Total Income</p>\r\n                  <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                    Rs. {totalAmount}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"rounded-md bg-richblack-800 p-6\">\r\n            {/* Render 3 courses */}\r\n            <div className=\"flex items-center justify-between\">\r\n              <p className=\"text-lg font-bold text-richblack-5\">Your Courses</p>\r\n              <Link to=\"/dashboard/my-courses\">\r\n                <p className=\"text-xs font-semibold text-yellow-50\">View All</p>\r\n              </Link>\r\n            </div>\r\n            <div className=\"my-4 flex items-start space-x-6\">\r\n              {courses.slice(0, 3).map((course) => (\r\n                <div key={course._id} className=\"w-1/3\">\r\n                  <img\r\n                    src={course.thumbnail}\r\n                    alt={course.courseName}\r\n                    className=\"h-[201px] w-full rounded-md object-cover\"\r\n                  />\r\n                  <div className=\"mt-3 w-full\">\r\n                    <p className=\"text-sm font-medium text-richblack-50\">\r\n                      {course.courseName}\r\n                    </p>\r\n                    <div className=\"mt-1 flex items-center space-x-2\">\r\n                      <p className=\"text-xs font-medium text-richblack-300\">\r\n                        {course.studentsEnroled.length} students\r\n                      </p>\r\n                      <p className=\"text-xs font-medium text-richblack-300\">\r\n                        |\r\n                      </p>\r\n                      <p className=\"text-xs font-medium text-richblack-300\">\r\n                        Rs. {course.price}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-20 rounded-md bg-richblack-800 p-6 py-20\">\r\n          <p className=\"text-center text-2xl font-bold text-richblack-5\">\r\n            You have not created any courses yet\r\n          </p>\r\n          <Link to=\"/dashboard/add-course\">\r\n            <p className=\"mt-1 text-center text-lg font-semibold text-yellow-50\">\r\n              Create a course\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\EnrolledCourses.jsx",["534"],["535"],"import { useEffect, useState } from \"react\"\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { getUserEnrolledCourses } from \"../../../services/operations/profileAPI\"\r\n\r\nexport default function EnrolledCourses() {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const navigate = useNavigate()\r\n\r\n  const [enrolledCourses, setEnrolledCourses] = useState(null)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      try {\r\n        const res = await getUserEnrolledCourses(token) // Getting all the published and the drafted courses\r\n\r\n        // Filtering the published course out\r\n        const filterPublishCourse = res.filter((ele) => ele.status !== \"Draft\")\r\n        // console.log(\r\n        //   \"Viewing all the couse that is Published\",\r\n        //   filterPublishCourse\r\n        // )\r\n\r\n        setEnrolledCourses(filterPublishCourse)\r\n      } catch (error) {\r\n        console.log(\"Could not fetch enrolled courses.\")\r\n      }\r\n    })()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-3xl text-richblack-50\">Enrolled Courses</div>\r\n      {!enrolledCourses ? (\r\n        <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n          <div className=\"spinner\"></div>\r\n        </div>\r\n      ) : !enrolledCourses.length ? (\r\n        <p className=\"grid h-[10vh] w-full place-content-center text-richblack-5\">\r\n          You have not enrolled in any course yet.\r\n          {/* TODO: Modify this Empty State */}\r\n        </p>\r\n      ) : (\r\n        <div className=\"my-8 text-richblack-5\">\r\n          {/* Headings */}\r\n          <div className=\"flex rounded-t-lg bg-richblack-500 \">\r\n            <p className=\"w-[45%] px-5 py-3\">Course Name</p>\r\n            <p className=\"w-1/4 px-2 py-3\">Duration</p>\r\n            <p className=\"flex-1 px-2 py-3\">Progress</p>\r\n          </div>\r\n          {/* Course Names */}\r\n          {enrolledCourses.map((course, i, arr) => (\r\n            <div\r\n              className={`flex items-center border border-richblack-700 ${\r\n                i === arr.length - 1 ? \"rounded-b-lg\" : \"rounded-none\"\r\n              }`}\r\n              key={i}\r\n            >\r\n              <div\r\n                className=\"flex w-[45%] cursor-pointer items-center gap-4 px-5 py-3\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    `/view-course/${course?._id}/section/${course.courseContent?.[0]?._id}/sub-section/${course.courseContent?.[0]?.subSection?.[0]?._id}`\r\n                  )\r\n                }}\r\n              >\r\n                <img\r\n                  src={course.thumbnail}\r\n                  alt=\"course_img\"\r\n                  className=\"h-14 w-14 rounded-lg object-cover\"\r\n                />\r\n                <div className=\"flex max-w-xs flex-col gap-2\">\r\n                  <p className=\"font-semibold\">{course.courseName}</p>\r\n                  <p className=\"text-xs text-richblack-300\">\r\n                    {course.courseDescription.length > 50\r\n                      ? `${course.courseDescription.slice(0, 50)}...`\r\n                      : course.courseDescription}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-1/4 px-2 py-3\">{course?.totalDuration}</div>\r\n              <div className=\"flex w-1/5 flex-col gap-2 px-2 py-3\">\r\n                <p>Progress: {course.progressPercentage || 0}%</p>\r\n                <ProgressBar\r\n                  completed={course.progressPercentage || 0}\r\n                  height=\"8px\"\r\n                  isLabelVisible={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\MyCourses.jsx",[],["536"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\courseSlice.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\cartSlice.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\profileSlice.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\OpenRoute.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\authSlice.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\PrivateRoute.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\slices\\viewCourseSlice.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\MyProfile.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\VideoDetails.jsx",["537"],[],"import React, { useEffect, useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport \"video-react/dist/video-react.css\"\nimport { useLocation } from \"react-router-dom\"\nimport { BigPlayButton, Player } from \"video-react\"\n\nimport { markLectureAsComplete } from \"../../../services/operations/courseDetailsAPI\"\nimport { updateCompletedLectures } from \"../../../slices/viewCourseSlice\"\nimport IconBtn from \"../../Common/IconBtn\"\n\nconst VideoDetails = () => {\n  const { courseId, sectionId, subSectionId } = useParams()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const playerRef = useRef(null)\n  const dispatch = useDispatch()\n  const { token } = useSelector((state) => state.auth)\n  const { courseSectionData, courseEntireData, completedLectures } =\n    useSelector((state) => state.viewCourse)\n\n  const [videoData, setVideoData] = useState([])\n  const [previewSource, setPreviewSource] = useState(\"\")\n  const [videoEnded, setVideoEnded] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!courseSectionData.length) return\n      if (!courseId && !sectionId && !subSectionId) {\n        navigate(`/dashboard/enrolled-courses`)\n      } else {\n        // console.log(\"courseSectionData\", courseSectionData)\n        const filteredData = courseSectionData.filter(\n          (course) => course._id === sectionId\n        )\n        // console.log(\"filteredData\", filteredData)\n        const filteredVideoData = filteredData?.[0]?.subSection.filter(\n          (data) => data._id === subSectionId\n        )\n        // console.log(\"filteredVideoData\", filteredVideoData)\n        setVideoData(filteredVideoData[0])\n        setPreviewSource(courseEntireData.thumbnail)\n        setVideoEnded(false)\n      }\n    })()\n  }, [courseSectionData, courseEntireData, location.pathname])\n\n  // check if the lecture is the first video of the course\n  const isFirstVideo = () => {\n    const currentSectionIndx = courseSectionData.findIndex(\n      (data) => data._id === sectionId\n    )\n\n    const currentSubSectionIndx = courseSectionData[\n      currentSectionIndx\n    ].subSection.findIndex((data) => data._id === subSectionId)\n\n    if (currentSectionIndx === 0 && currentSubSectionIndx === 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // go to the next video\n  const goToNextVideo = () => {\n    // console.log(courseSectionData)\n\n    const currentSectionIndx = courseSectionData.findIndex(\n      (data) => data._id === sectionId\n    )\n\n    const noOfSubsections =\n      courseSectionData[currentSectionIndx].subSection.length\n\n    const currentSubSectionIndx = courseSectionData[\n      currentSectionIndx\n    ].subSection.findIndex((data) => data._id === subSectionId)\n\n    // console.log(\"no of subsections\", noOfSubsections)\n\n    if (currentSubSectionIndx !== noOfSubsections - 1) {\n      const nextSubSectionId =\n        courseSectionData[currentSectionIndx].subSection[\n          currentSubSectionIndx + 1\n        ]._id\n      navigate(\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${nextSubSectionId}`\n      )\n    } else {\n      const nextSectionId = courseSectionData[currentSectionIndx + 1]._id\n      const nextSubSectionId =\n        courseSectionData[currentSectionIndx + 1].subSection[0]._id\n      navigate(\n        `/view-course/${courseId}/section/${nextSectionId}/sub-section/${nextSubSectionId}`\n      )\n    }\n  }\n\n  // check if the lecture is the last video of the course\n  const isLastVideo = () => {\n    const currentSectionIndx = courseSectionData.findIndex(\n      (data) => data._id === sectionId\n    )\n\n    const noOfSubsections =\n      courseSectionData[currentSectionIndx].subSection.length\n\n    const currentSubSectionIndx = courseSectionData[\n      currentSectionIndx\n    ].subSection.findIndex((data) => data._id === subSectionId)\n\n    if (\n      currentSectionIndx === courseSectionData.length - 1 &&\n      currentSubSectionIndx === noOfSubsections - 1\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // go to the previous video\n  const goToPrevVideo = () => {\n    // console.log(courseSectionData)\n\n    const currentSectionIndx = courseSectionData.findIndex(\n      (data) => data._id === sectionId\n    )\n\n    const currentSubSectionIndx = courseSectionData[\n      currentSectionIndx\n    ].subSection.findIndex((data) => data._id === subSectionId)\n\n    if (currentSubSectionIndx !== 0) {\n      const prevSubSectionId =\n        courseSectionData[currentSectionIndx].subSection[\n          currentSubSectionIndx - 1\n        ]._id\n      navigate(\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${prevSubSectionId}`\n      )\n    } else {\n      const prevSectionId = courseSectionData[currentSectionIndx - 1]._id\n      const prevSubSectionLength =\n        courseSectionData[currentSectionIndx - 1].subSection.length\n      const prevSubSectionId =\n        courseSectionData[currentSectionIndx - 1].subSection[\n          prevSubSectionLength - 1\n        ]._id\n      navigate(\n        `/view-course/${courseId}/section/${prevSectionId}/sub-section/${prevSubSectionId}`\n      )\n    }\n  }\n\n  const handleLectureCompletion = async () => {\n    setLoading(true)\n    const res = await markLectureAsComplete(\n      { courseId: courseId, subsectionId: subSectionId },\n      token\n    )\n    if (res) {\n      dispatch(updateCompletedLectures(subSectionId))\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"flex flex-col gap-5 text-white\">\n      {!videoData ? (\n        <img\n          src={previewSource}\n          alt=\"Preview\"\n          className=\"h-full w-full rounded-md object-cover\"\n        />\n      ) : (\n        <Player\n          ref={playerRef}\n          aspectRatio=\"16:9\"\n          playsInline\n          onEnded={() => setVideoEnded(true)}\n          src={videoData?.videoUrl}\n        >\n          <BigPlayButton position=\"center\" />\n          {/* Render When Video Ends */}\n          {videoEnded && (\n            <div\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top, rgb(0, 0, 0), rgba(0,0,0,0.7), rgba(0,0,0,0.5), rgba(0,0,0,0.1)\",\n              }}\n              className=\"full absolute inset-0 z-[100] grid h-full place-content-center font-inter\"\n            >\n              {!completedLectures.includes(subSectionId) && (\n                <IconBtn\n                  disabled={loading}\n                  onclick={() => handleLectureCompletion()}\n                  text={!loading ? \"Mark As Completed\" : \"Loading...\"}\n                  customClasses=\"text-xl max-w-max px-4 mx-auto\"\n                />\n              )}\n              <IconBtn\n                disabled={loading}\n                onclick={() => {\n                  if (playerRef?.current) {\n                    // set the current time of the video to 0\n                    playerRef?.current?.seek(0)\n                    setVideoEnded(false)\n                  }\n                }}\n                text=\"Rewatch\"\n                customClasses=\"text-xl max-w-max px-4 mx-auto mt-2\"\n              />\n              <div className=\"mt-10 flex min-w-[250px] justify-center gap-x-4 text-xl\">\n                {!isFirstVideo() && (\n                  <button\n                    disabled={loading}\n                    onClick={goToPrevVideo}\n                    className=\"blackButton\"\n                  >\n                    Prev\n                  </button>\n                )}\n                {!isLastVideo() && (\n                  <button\n                    disabled={loading}\n                    onClick={goToNextVideo}\n                    className=\"blackButton\"\n                  >\n                    Next\n                  </button>\n                )}\n              </div>\n            </div>\n          )}\n        </Player>\n      )}\n\n      <h1 className=\"mt-4 text-3xl font-semibold\">{videoData?.title}</h1>\n      <p className=\"pt-2 pb-6\">{videoData?.description}</p>\n    </div>\n  )\n}\n\nexport default VideoDetails\n// video\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\index.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\index.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\EditCourse\\index.jsx",["538"],["539"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport {\r\n  fetchCourseDetails,\r\n  getFullDetailsOfCourse,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport RenderSteps from \"../AddCourse/RenderSteps\"\r\n\r\nexport default function EditCourse() {\r\n  const dispatch = useDispatch()\r\n  const { courseId } = useParams()\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      setLoading(true)\r\n      const result = await getFullDetailsOfCourse(courseId, token)\r\n      if (result?.courseDetails) {\r\n        dispatch(setEditCourse(true))\r\n        dispatch(setCourse(result?.courseDetails))\r\n      }\r\n      setLoading(false)\r\n    })()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid flex-1 place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-14 text-3xl font-medium text-richblack-5\">\r\n        Edit Course\r\n      </h1>\r\n      <div className=\"mx-auto max-w-[600px]\">\r\n        {course ? (\r\n          <RenderSteps />\r\n        ) : (\r\n          <p className=\"mt-14 text-center text-3xl font-semibold text-richblack-100\">\r\n            Course not found\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\index.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\apis.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\apiConnector.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\pageAndComponntDatas.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\formatDate.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\avgRating.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\courseDetailsAPI.js",["540"],[],"import { toast } from \"react-hot-toast\"\n\nimport { updateCompletedLectures } from \"../../slices/viewCourseSlice\"\n// import { setLoading } from \"../../slices/profileSlice\";\nimport { apiConnector } from \"../apiConnector\"\nimport { courseEndpoints } from \"../apis\"\n\nconst {\n  COURSE_DETAILS_API,\n  COURSE_CATEGORIES_API,\n  GET_ALL_COURSE_API,\n  CREATE_COURSE_API,\n  EDIT_COURSE_API,\n  CREATE_SECTION_API,\n  CREATE_SUBSECTION_API,\n  UPDATE_SECTION_API,\n  UPDATE_SUBSECTION_API,\n  DELETE_SECTION_API,\n  DELETE_SUBSECTION_API,\n  GET_ALL_INSTRUCTOR_COURSES_API,\n  DELETE_COURSE_API,\n  GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n  CREATE_RATING_API,\n  LECTURE_COMPLETION_API,\n} = courseEndpoints\n\nexport const getAllCourses = async () => {\n  const toastId = toast.loading(\"Loading...\")\n  let result = []\n  try {\n    const response = await apiConnector(\"GET\", GET_ALL_COURSE_API)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"GET_ALL_COURSE_API API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\nexport const fetchCourseDetails = async (courseId) => {\n  const toastId = toast.loading(\"Loading...\")\n  //   dispatch(setLoading(true));\n  let result = null\n  try {\n    const response = await apiConnector(\"POST\", COURSE_DETAILS_API, {\n      courseId,\n    })\n    console.log(\"COURSE_DETAILS_API API RESPONSE............\", response)\n\n    if (!response.data.success) {\n      throw new Error(response.data.message)\n    }\n    result = response.data\n  } catch (error) {\n    console.log(\"COURSE_DETAILS_API API ERROR............\", error)\n    result = error.response.data\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId)\n  //   dispatch(setLoading(false));\n  return result\n}\n\n// fetching the available course categories\nexport const fetchCourseCategories = async () => {\n  let result = []\n  try {\n    const response = await apiConnector(\"GET\", COURSE_CATEGORIES_API)\n    console.log(\"COURSE_CATEGORIES_API API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"COURSE_CATEGORY_API API ERROR............\", error)\n    toast.error(error.message)\n  }\n  return result\n}\n\n// add the course details\nexport const addCourseDetails = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Course Details\")\n    }\n    toast.success(\"Course Details Added Successfully\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"CREATE COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// edit the course details\nexport const editCourseDetails = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", EDIT_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"EDIT COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Course Details\")\n    }\n    toast.success(\"Course Details Updated Successfully\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"EDIT COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a section\nexport const createSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Section\")\n    }\n    toast.success(\"Course Section Created\")\n    result = response?.data?.updatedCourse\n  } catch (error) {\n    console.log(\"CREATE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a subsection\nexport const createSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Lecture\")\n    }\n    toast.success(\"Lecture Added\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"CREATE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// update a section\nexport const updateSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"UPDATE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Section\")\n    }\n    toast.success(\"Course Section Updated\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"UPDATE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// update a subsection\nexport const updateSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"UPDATE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Lecture\")\n    }\n    toast.success(\"Lecture Updated\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"UPDATE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// delete a section\nexport const deleteSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Section\")\n    }\n    toast.success(\"Course Section Deleted\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"DELETE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n// delete a subsection\nexport const deleteSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Lecture\")\n    }\n    toast.success(\"Lecture Deleted\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"DELETE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// fetching all courses under a specific instructor\nexport const fetchInstructorCourses = async (token) => {\n  let result = []\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\n      \"GET\",\n      GET_ALL_INSTRUCTOR_COURSES_API,\n      null,\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n    console.log(\"INSTRUCTOR COURSES API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Instructor Courses\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"INSTRUCTOR COURSES API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// delete a course\nexport const deleteCourse = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"DELETE\", DELETE_COURSE_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Course\")\n    }\n    toast.success(\"Course Deleted\")\n  } catch (error) {\n    console.log(\"DELETE COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n}\n\n// get full details of a course\nexport const getFullDetailsOfCourse = async (courseId, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  //   dispatch(setLoading(true));\n  let result = null\n  try {\n    const response = await apiConnector(\n      \"POST\",\n      GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n      {\n        courseId,\n      },\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n    console.log(\"COURSE_FULL_DETAILS_API API RESPONSE............\", response)\n\n    if (!response.data.success) {\n      throw new Error(response.data.message)\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"COURSE_FULL_DETAILS_API API ERROR............\", error)\n    result = error.response.data\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId)\n  //   dispatch(setLoading(false));\n  return result\n}\n\n// mark a lecture as complete\nexport const markLectureAsComplete = async (data, token) => {\n  let result = null\n  console.log(\"mark complete data\", data)\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", LECTURE_COMPLETION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\n      \"MARK_LECTURE_AS_COMPLETE_API API RESPONSE............\",\n      response\n    )\n\n    if (!response.data.message) {\n      throw new Error(response.data.error)\n    }\n    toast.success(\"Lecture Completed\")\n    result = true\n  } catch (error) {\n    console.log(\"MARK_LECTURE_AS_COMPLETE_API API ERROR............\", error)\n    toast.error(error.message)\n    result = false\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a rating for course\nexport const createRating = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  let success = false\n  try {\n    const response = await apiConnector(\"POST\", CREATE_RATING_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE RATING API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Rating\")\n    }\n    toast.success(\"Rating Created\")\n    success = true\n  } catch (error) {\n    success = false\n    console.log(\"CREATE RATING API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return success\n}\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\studentFeaturesAPI.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\authAPI.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\ReviewSlider.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Footer.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\Template.jsx",["541"],[],"import { FcGoogle } from \"react-icons/fc\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport frameImg from \"../../../assets/Images/frame.png\"\r\nimport LoginForm from \"./LoginForm\"\r\nimport SignupForm from \"./SignupForm\"\r\n\r\nfunction Template({ title, description1, description2, image, formType }) {\r\n  const { loading } = useSelector((state) => state.auth)\r\n\r\n  return (\r\n    <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n      {loading ? (\r\n        <div className=\"spinner\"></div>\r\n      ) : (\r\n        <div className=\"mx-auto flex w-11/12 max-w-maxContent flex-col-reverse justify-between gap-y-12 py-12 md:flex-row md:gap-y-0 md:gap-x-12\">\r\n          <div className=\"mx-auto w-11/12 max-w-[450px] md:mx-0\">\r\n            <h1 className=\"text-[1.875rem] font-semibold leading-[2.375rem] text-richblack-5\">\r\n              {title}\r\n            </h1>\r\n            <p className=\"mt-4 text-[1.125rem] leading-[1.625rem]\">\r\n              <span className=\"text-richblack-100\">{description1}</span>{\" \"}\r\n              <span className=\"font-edu-sa font-bold italic text-blue-100\">\r\n                {description2}\r\n              </span>\r\n            </p>\r\n            {formType === \"signup\" ? <SignupForm /> : <LoginForm />}\r\n          </div>\r\n          <div className=\"relative mx-auto w-11/12 max-w-[450px] md:mx-0\">\r\n            <img\r\n              src={frameImg}\r\n              alt=\"Pattern\"\r\n              width={558}\r\n              height={504}\r\n              loading=\"lazy\"\r\n            />\r\n            <img\r\n              src={image}\r\n              alt=\"Students\"\r\n              width={558}\r\n              height={504}\r\n              loading=\"lazy\"\r\n              className=\"absolute -top-4 right-4 z-10\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Template\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Sidebar.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\utils\\dateFormatter.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\Quote.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\ContactFormSection.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\Stats.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\AboutPage\\LearningGrid.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\HighlightText.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\Button.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\CodeBlocks.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\ExploreMore.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\InstructorSection.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\LearningLanguageSection.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Catalog\\Course_Card.jsx",["542","543","544"],[],"import React, { useEffect, useState } from \"react\"\n// Icons\nimport { FaRegStar, FaStar } from \"react-icons/fa\"\nimport ReactStars from \"react-rating-stars-component\"\nimport { Link } from \"react-router-dom\"\n\nimport GetAvgRating from \"../../../utils/avgRating\"\nimport RatingStars from \"../../Common/RatingStars\"\n\nfunction Course_Card({ course, Height }) {\n  // const avgReviewCount = GetAvgRating(course.ratingAndReviews)\n  // console.log(course.ratingAndReviews)\n  const [avgReviewCount, setAvgReviewCount] = useState(0)\n  useEffect(() => {\n    const count = GetAvgRating(course.ratingAndReviews)\n    setAvgReviewCount(count)\n  }, [course])\n  // console.log(\"count............\", avgReviewCount)\n\n  return (\n    <>\n      <Link to={`/courses/${course._id}`}>\n        <div className=\"\">\n          <div className=\"rounded-lg\">\n            <img\n              src={course?.thumbnail}\n              alt=\"course thumnail\"\n              className={`${Height} w-full rounded-xl object-cover `}\n            />\n          </div>\n          <div className=\"flex flex-col gap-2 px-1 py-3\">\n            <p className=\"text-xl text-richblack-5\">{course?.courseName}</p>\n            <p className=\"text-sm text-richblack-50\">\n              {course?.instructor?.firstName} {course?.instructor?.lastName}\n            </p>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-yellow-5\">{avgReviewCount || 0}</span>\n              {/* <ReactStars\n                count={5}\n                value={avgReviewCount || 0}\n                size={20}\n                edit={false}\n                activeColor=\"#ffd700\"\n                emptyIcon={<FaRegStar />}\n                fullIcon={<FaStar />}\n              /> */}\n              <RatingStars Review_Count={avgReviewCount} />\n              <span className=\"text-richblack-400\">\n                {course?.ratingAndReviews?.length} Ratings\n              </span>\n            </div>\n            <p className=\"text-xl text-richblack-5\">Rs. {course?.price}</p>\n          </div>\n        </div>\n      </Link>\n    </>\n  )\n}\n\nexport default Course_Card\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Catalog\\Course_Slider.jsx",["545","546","547"],[],"import React, { useEffect, useState } from \"react\"\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\"\n\n// Import Swiper styles\nimport \"swiper/css\"\nimport \"swiper/css/free-mode\"\nimport \"swiper/css/pagination\"\n// import \"../../..\"\n// Import required modules\nimport { FreeMode, Pagination } from \"swiper\"\n\n// import { getAllCourses } from \"../../services/operations/courseDetailsAPI\"\nimport Course_Card from \"./Course_Card\"\n\nfunction Course_Slider({ Courses }) {\n  return (\n    <>\n      {Courses?.length ? (\n        <Swiper\n          slidesPerView={1}\n          spaceBetween={25}\n          loop={true}\n          modules={[FreeMode, Pagination]}\n          breakpoints={{\n            1024: {\n              slidesPerView: 3,\n            },\n          }}\n          className=\"max-h-[30rem]\"\n        >\n          {Courses?.map((course, i) => (\n            <SwiperSlide key={i}>\n              <Course_Card course={course} Height={\"h-[250px]\"} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      ) : (\n        <p className=\"text-xl text-richblack-5\">No Course Found</p>\n      )}\n    </>\n  )\n}\n\nexport default Course_Slider\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\RatingStars.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\ConfirmationModal.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\navbar-links.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactDetails.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\CourseReviewModal.jsx",[],["548"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactForm.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\Timeline.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseAccordionBar.jsx",["549"],[],"import { useEffect, useRef, useState } from \"react\"\nimport { AiOutlineDown } from \"react-icons/ai\"\n\nimport CourseSubSectionAccordion from \"./CourseSubSectionAccordion\"\n\nexport default function CourseAccordionBar({ course, isActive, handleActive }) {\n  const contentEl = useRef(null)\n\n  // Accordian state\n  const [active, setActive] = useState(false)\n  useEffect(() => {\n    setActive(isActive?.includes(course._id))\n  }, [isActive])\n  const [sectionHeight, setSectionHeight] = useState(0)\n  useEffect(() => {\n    setSectionHeight(active ? contentEl.current.scrollHeight : 0)\n  }, [active])\n\n  return (\n    <div className=\"overflow-hidden border border-solid border-richblack-600 bg-richblack-700 text-richblack-5 last:mb-0\">\n      <div>\n        <div\n          className={`flex cursor-pointer items-start justify-between bg-opacity-20 px-7  py-6 transition-[0.3s]`}\n          onClick={() => {\n            handleActive(course._id)\n          }}\n        >\n          <div className=\"flex items-center gap-2\">\n            <i\n              className={\n                isActive.includes(course._id) ? \"rotate-180\" : \"rotate-0\"\n              }\n            >\n              <AiOutlineDown />\n            </i>\n            <p>{course?.sectionName}</p>\n          </div>\n          <div className=\"space-x-4\">\n            <span className=\"text-yellow-25\">\n              {`${course.subSection.length || 0} lecture(s)`}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        ref={contentEl}\n        className={`relative h-0 overflow-hidden bg-richblack-900 transition-[height] duration-[0.35s] ease-[ease]`}\n        style={{\n          height: sectionHeight,\n        }}\n      >\n        <div className=\"text-textHead flex flex-col gap-2 px-7 py-6 font-semibold\">\n          {course?.subSection?.map((subSec, i) => {\n            return <CourseSubSectionAccordion subSec={subSec} key={i} />\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ViewCourse\\VideoDetailsSidebar.jsx",[],["550"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\ProfileDropdown.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseDetailsCard.jsx",["551"],[],"import React from \"react\"\nimport copy from \"copy-to-clipboard\"\nimport { toast } from \"react-hot-toast\"\nimport { BsFillCaretRightFill } from \"react-icons/bs\"\nimport { FaShareSquare } from \"react-icons/fa\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\"\n\nimport { addToCart } from \"../../../slices/cartSlice\"\nimport { ACCOUNT_TYPE } from \"../../../utils/constants\"\n\n// const CourseIncludes = [\n//   \"8 hours on-demand video\",\n//   \"Full Lifetime access\",\n//   \"Access on Mobile and TV\",\n//   \"Certificate of completion\",\n// ]\n\nfunction CourseDetailsCard({ course, setConfirmationModal, handleBuyCourse }) {\n  const { user } = useSelector((state) => state.profile)\n  const { token } = useSelector((state) => state.auth)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const {\n    thumbnail: ThumbnailImage,\n    price: CurrentPrice,\n    _id: courseId,\n  } = course\n\n  const handleShare = () => {\n    copy(window.location.href)\n    toast.success(\"Link copied to clipboard\")\n  }\n\n  const handleAddToCart = () => {\n    if (user && user?.accountType === ACCOUNT_TYPE.INSTRUCTOR) {\n      toast.error(\"You are an Instructor. You can't buy a course.\")\n      return\n    }\n    if (token) {\n      dispatch(addToCart(course))\n      return\n    }\n    setConfirmationModal({\n      text1: \"You are not logged in!\",\n      text2: \"Please login to add To Cart\",\n      btn1Text: \"Login\",\n      btn2Text: \"Cancel\",\n      btn1Handler: () => navigate(\"/login\"),\n      btn2Handler: () => setConfirmationModal(null),\n    })\n  }\n\n  // console.log(\"Student already enrolled \", course?.studentsEnroled, user?._id)\n\n  return (\n    <>\n      <div\n        className={`flex flex-col gap-4 rounded-md bg-richblack-700 p-4 text-richblack-5`}\n      >\n        {/* Course Image */}\n        <img\n          src={ThumbnailImage}\n          alt={course?.courseName}\n          className=\"max-h-[300px] min-h-[180px] w-[400px] overflow-hidden rounded-2xl object-cover md:max-w-full\"\n        />\n\n        <div className=\"px-4\">\n          <div className=\"space-x-3 pb-4 text-3xl font-semibold\">\n            Rs. {CurrentPrice}\n          </div>\n          <div className=\"flex flex-col gap-4\">\n            <button\n              className=\"yellowButton\"\n              onClick={\n                user && course?.studentsEnroled.includes(user?._id)\n                  ? () => navigate(\"/dashboard/enrolled-courses\")\n                  : handleBuyCourse\n              }\n            >\n              {user && course?.studentsEnroled.includes(user?._id)\n                ? \"Go To Course\"\n                : \"Buy Now\"}\n            </button>\n            {(!user || !course?.studentsEnroled.includes(user?._id)) && (\n              <button onClick={handleAddToCart} className=\"blackButton\">\n                Add to Cart\n              </button>\n            )}\n          </div>\n          <div>\n            <p className=\"pb-3 pt-6 text-center text-sm text-richblack-25\">\n              30-Day Money-Back Guarantee\n            </p>\n          </div>\n\n          <div className={``}>\n            <p className={`my-2 text-xl font-semibold `}>\n              This Course Includes :\n            </p>\n            <div className=\"flex flex-col gap-3 text-sm text-caribbeangreen-100\">\n              {course?.instructions?.map((item, i) => {\n                return (\n                  <p className={`flex gap-2`} key={i}>\n                    <BsFillCaretRightFill />\n                    <span>{item}</span>\n                  </p>\n                )\n              })}\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <button\n              className=\"mx-auto flex items-center gap-2 py-6 text-yellow-100 \"\n              onClick={handleShare}\n            >\n              <FaShareSquare size={15} /> Share\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CourseDetailsCard\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\IconBtn.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\InstructorDashboard\\InstructorChart.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\InstructorCourses\\CoursesTable.jsx",["552","553","554"],[],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"react-super-responsive-table\"\r\n\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\r\nimport { useState } from \"react\"\r\nimport { FaCheck } from \"react-icons/fa\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport { HiClock } from \"react-icons/hi\"\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { formatDate } from \"../../../../services/formatDate\"\r\nimport {\r\n  deleteCourse,\r\n  fetchInstructorCourses,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { COURSE_STATUS } from \"../../../../utils/constants\"\r\nimport ConfirmationModal from \"../../../Common/ConfirmationModal\"\r\n\r\nexport default function CoursesTable({ courses, setCourses }) {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const [loading, setLoading] = useState(false)\r\n  const [confirmationModal, setConfirmationModal] = useState(null)\r\n  const TRUNCATE_LENGTH = 30\r\n\r\n  const handleCourseDelete = async (courseId) => {\r\n    setLoading(true)\r\n    await deleteCourse({ courseId: courseId }, token)\r\n    const result = await fetchInstructorCourses(token)\r\n    if (result) {\r\n      setCourses(result)\r\n    }\r\n    setConfirmationModal(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  // console.log(\"All Course \", courses)\r\n\r\n  return (\r\n    <>\r\n      <Table className=\"rounded-xl border border-richblack-800 \">\r\n        <Thead>\r\n          <Tr className=\"flex gap-x-10 rounded-t-md border-b border-b-richblack-800 px-6 py-2\">\r\n            <Th className=\"flex-1 text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Courses\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Duration\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Price\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Actions\r\n            </Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {courses?.length === 0 ? (\r\n            <Tr>\r\n              <Td className=\"py-10 text-center text-2xl font-medium text-richblack-100\">\r\n                No courses found\r\n                {/* TODO: Need to change this state */}\r\n              </Td>\r\n            </Tr>\r\n          ) : (\r\n            courses?.map((course) => (\r\n              <Tr\r\n                key={course._id}\r\n                className=\"flex gap-x-10 border-b border-richblack-800 px-6 py-8\"\r\n              >\r\n                <Td className=\"flex flex-1 gap-x-4\">\r\n                  <img\r\n                    src={course?.thumbnail}\r\n                    alt={course?.courseName}\r\n                    className=\"h-[148px] w-[220px] rounded-lg object-cover\"\r\n                  />\r\n                  <div className=\"flex flex-col justify-between\">\r\n                    <p className=\"text-lg font-semibold text-richblack-5\">\r\n                      {course.courseName}\r\n                    </p>\r\n                    <p className=\"text-xs text-richblack-300\">\r\n                      {course.courseDescription.split(\" \").length >\r\n                      TRUNCATE_LENGTH\r\n                        ? course.courseDescription\r\n                            .split(\" \")\r\n                            .slice(0, TRUNCATE_LENGTH)\r\n                            .join(\" \") + \"...\"\r\n                        : course.courseDescription}\r\n                    </p>\r\n                    <p className=\"text-[12px] text-white\">\r\n                      Created: {formatDate(course.createdAt)}\r\n                    </p>\r\n                    {course.status === COURSE_STATUS.DRAFT ? (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-pink-100\">\r\n                        <HiClock size={14} />\r\n                        Drafted\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-yellow-100\">\r\n                        <div className=\"flex h-3 w-3 items-center justify-center rounded-full bg-yellow-100 text-richblack-700\">\r\n                          <FaCheck size={8} />\r\n                        </div>\r\n                        Published\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  2hr 30min\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  ₹{course.price}\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100 \">\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      navigate(`/dashboard/edit-course/${course._id}`)\r\n                    }}\r\n                    title=\"Edit\"\r\n                    className=\"px-2 transition-all duration-200 hover:scale-110 hover:text-caribbeangreen-300\"\r\n                  >\r\n                    <FiEdit2 size={20} />\r\n                  </button>\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      setConfirmationModal({\r\n                        text1: \"Do you want to delete this course?\",\r\n                        text2:\r\n                          \"All the data related to this course will be deleted\",\r\n                        btn1Text: !loading ? \"Delete\" : \"Loading...  \",\r\n                        btn2Text: \"Cancel\",\r\n                        btn1Handler: !loading\r\n                          ? () => handleCourseDelete(course._id)\r\n                          : () => {},\r\n                        btn2Handler: !loading\r\n                          ? () => setConfirmationModal(null)\r\n                          : () => {},\r\n                      })\r\n                    }}\r\n                    title=\"Delete\"\r\n                    className=\"px-1 transition-all duration-200 hover:scale-110 hover:text-[#ff0000]\"\r\n                  >\r\n                    <RiDeleteBin6Line size={20} />\r\n                  </button>\r\n                </Td>\r\n              </Tr>\r\n            ))\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\RenderTotalAmount.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Cart\\RenderCartCourses.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\RenderSteps.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\EditProfile.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\DeleteAccount.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\ChangeProfilePicture.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\Settings\\UpdatePassword.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\footer-links.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\dashboard-links.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\data\\homepage-explore.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\LoginForm.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Auth\\SignupForm.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\SidebarLink.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\ContactUsPage\\ContactUsForm.jsx",["555"],[],"import React, { useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nimport CountryCode from \"../../../data/countrycode.json\"\nimport { apiConnector } from \"../../../services/apiConnector\"\nimport { contactusEndpoint } from \"../../../services/apis\"\n\nconst ContactUsForm = () => {\n  const [loading, setLoading] = useState(false)\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm()\n\n  const submitContactForm = async (data) => {\n    // console.log(\"Form Data - \", data)\n    try {\n      setLoading(true)\n      const res = await apiConnector(\n        \"POST\",\n        contactusEndpoint.CONTACT_US_API,\n        data\n      )\n      // console.log(\"Email Res - \", res)\n      setLoading(false)\n    } catch (error) {\n      console.log(\"ERROR MESSAGE - \", error.message)\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        message: \"\",\n        phoneNo: \"\",\n      })\n    }\n  }, [reset, isSubmitSuccessful])\n\n  return (\n    <form\n      className=\"flex flex-col gap-7\"\n      onSubmit={handleSubmit(submitContactForm)}\n    >\n      <div className=\"flex flex-col gap-5 lg:flex-row\">\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n          <label htmlFor=\"firstname\" className=\"lable-style\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            id=\"firstname\"\n            placeholder=\"Enter first name\"\n            className=\"form-style\"\n            {...register(\"firstname\", { required: true })}\n          />\n          {errors.firstname && (\n            <span className=\"-mt-1 text-[12px] text-yellow-100\">\n              Please enter your name.\n            </span>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n          <label htmlFor=\"lastname\" className=\"lable-style\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            id=\"lastname\"\n            placeholder=\"Enter last name\"\n            className=\"form-style\"\n            {...register(\"lastname\")}\n          />\n        </div>\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"email\" className=\"lable-style\">\n          Email Address\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Enter email address\"\n          className=\"form-style\"\n          {...register(\"email\", { required: true })}\n        />\n        {errors.email && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            Please enter your Email address.\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"phonenumber\" className=\"lable-style\">\n          Phone Number\n        </label>\n\n        <div className=\"flex gap-5\">\n          <div className=\"flex w-[81px] flex-col gap-2\">\n            <select\n              type=\"text\"\n              name=\"firstname\"\n              id=\"firstname\"\n              placeholder=\"Enter first name\"\n              className=\"form-style\"\n              {...register(\"countrycode\", { required: true })}\n            >\n              {CountryCode.map((ele, i) => {\n                return (\n                  <option key={i} value={ele.code}>\n                    {ele.code} -{ele.country}\n                  </option>\n                )\n              })}\n            </select>\n          </div>\n          <div className=\"flex w-[calc(100%-90px)] flex-col gap-2\">\n            <input\n              type=\"number\"\n              name=\"phonenumber\"\n              id=\"phonenumber\"\n              placeholder=\"12345 67890\"\n              className=\"form-style\"\n              {...register(\"phoneNo\", {\n                required: {\n                  value: true,\n                  message: \"Please enter your Phone Number.\",\n                },\n                maxLength: { value: 12, message: \"Invalid Phone Number\" },\n                minLength: { value: 10, message: \"Invalid Phone Number\" },\n              })}\n            />\n          </div>\n        </div>\n        {errors.phoneNo && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            {errors.phoneNo.message}\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"message\" className=\"lable-style\">\n          Message\n        </label>\n        <textarea\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"7\"\n          placeholder=\"Enter your message here\"\n          className=\"form-style\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            Please enter your Message.\n          </span>\n        )}\n      </div>\n\n      <button\n        disabled={loading}\n        type=\"submit\"\n        className={`rounded-md bg-yellow-50 px-6 py-3 text-center text-[13px] font-bold text-black shadow-[2px_2px_0px_0px_rgba(255,255,255,0.18)] \n         ${\n           !loading &&\n           \"transition-all duration-200 hover:scale-95 hover:shadow-none\"\n         }  disabled:bg-richblack-500 sm:text-[16px] `}\n      >\n        Send Message\n      </button>\n    </form>\n  )\n}\n\nexport default ContactUsForm\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Course\\CourseSubSectionAccordion.jsx",["556","557","558","559"],[],"import React, { useEffect, useRef, useState } from \"react\"\nimport { AiOutlineDown } from \"react-icons/ai\"\nimport { HiOutlineVideoCamera } from \"react-icons/hi\"\n\nfunction CourseSubSectionAccordion({ subSec }) {\n  return (\n    <div>\n      <div className=\"flex justify-between py-2\">\n        <div className={`flex items-center gap-2`}>\n          <span>\n            <HiOutlineVideoCamera />\n          </span>\n          <p>{subSec?.title}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseSubSectionAccordion\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\HomePage\\CourseCard.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\hooks\\useOnClickOutside.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\services\\operations\\SettingsAPI.js",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\CourseInformationForm.jsx",[],["560"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\CourseBuilderForm.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\PublishCourse\\index.jsx",["561"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { editCourseDetails } from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { resetCourseState, setStep } from \"../../../../../slices/courseSlice\"\r\nimport { COURSE_STATUS } from \"../../../../../utils/constants\"\r\nimport IconBtn from \"../../../../Common/IconBtn\"\r\n\r\nexport default function PublishCourse() {\r\n  const { register, handleSubmit, setValue, getValues } = useForm()\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (course?.status === COURSE_STATUS.PUBLISHED) {\r\n      setValue(\"public\", true)\r\n    }\r\n  }, [])\r\n\r\n  const goBack = () => {\r\n    dispatch(setStep(2))\r\n  }\r\n\r\n  const goToCourses = () => {\r\n    dispatch(resetCourseState())\r\n    navigate(\"/dashboard/my-courses\")\r\n  }\r\n\r\n  const handleCoursePublish = async () => {\r\n    // check if form has been updated or not\r\n    if (\r\n      (course?.status === COURSE_STATUS.PUBLISHED &&\r\n        getValues(\"public\") === true) ||\r\n      (course?.status === COURSE_STATUS.DRAFT && getValues(\"public\") === false)\r\n    ) {\r\n      // form has not been updated\r\n      // no need to make api call\r\n      goToCourses()\r\n      return\r\n    }\r\n    const formData = new FormData()\r\n    formData.append(\"courseId\", course._id)\r\n    const courseStatus = getValues(\"public\")\r\n      ? COURSE_STATUS.PUBLISHED\r\n      : COURSE_STATUS.DRAFT\r\n    formData.append(\"status\", courseStatus)\r\n    setLoading(true)\r\n    const result = await editCourseDetails(formData, token)\r\n    if (result) {\r\n      goToCourses()\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n    handleCoursePublish()\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-6\">\r\n      <p className=\"text-2xl font-semibold text-richblack-5\">\r\n        Publish Settings\r\n      </p>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* Checkbox */}\r\n        <div className=\"my-6 mb-8\">\r\n          <label htmlFor=\"public\" className=\"inline-flex items-center text-lg\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"public\"\r\n              {...register(\"public\")}\r\n              className=\"border-gray-300 h-4 w-4 rounded bg-richblack-500 text-richblack-400 focus:ring-2 focus:ring-richblack-5\"\r\n            />\r\n            <span className=\"ml-2 text-richblack-400\">\r\n              Make this course as public\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {/* Next Prev Button */}\r\n        <div className=\"ml-auto flex max-w-max items-center gap-x-4\">\r\n          <button\r\n            disabled={loading}\r\n            type=\"button\"\r\n            onClick={goBack}\r\n            className=\"flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900\"\r\n          >\r\n            Back\r\n          </button>\r\n          <IconBtn disabled={loading} text=\"Save Changes\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\Common\\Tab.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\Upload.jsx",["562"],["563","564"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { FiUploadCloud } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport \"video-react/dist/video-react.css\"\r\nimport { Player } from \"video-react\"\r\n\r\nexport default function Upload({\r\n  name,\r\n  label,\r\n  register,\r\n  setValue,\r\n  errors,\r\n  video = false,\r\n  viewData = null,\r\n  editData = null,\r\n}) {\r\n  const { course } = useSelector((state) => state.course)\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [previewSource, setPreviewSource] = useState(\r\n    viewData ? viewData : editData ? editData : \"\"\r\n  )\r\n  const inputRef = useRef(null)\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    const file = acceptedFiles[0]\r\n    if (file) {\r\n      previewFile(file)\r\n      setSelectedFile(file)\r\n    }\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: !video\r\n      ? { \"image/*\": [\".jpeg\", \".jpg\", \".png\"] }\r\n      : { \"video/*\": [\".mp4\"] },\r\n    onDrop,\r\n  })\r\n\r\n  const previewFile = (file) => {\r\n    // console.log(file)\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    register(name, { required: true })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [register])\r\n\r\n  useEffect(() => {\r\n    setValue(name, selectedFile)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedFile, setValue])\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-2\">\r\n      <label className=\"text-sm text-richblack-5\" htmlFor={name}>\r\n        {label} {!viewData && <sup className=\"text-pink-200\">*</sup>}\r\n      </label>\r\n      <div\r\n        className={`${\r\n          isDragActive ? \"bg-richblack-600\" : \"bg-richblack-700\"\r\n        } flex min-h-[250px] cursor-pointer items-center justify-center rounded-md border-2 border-dotted border-richblack-500`}\r\n      >\r\n        {previewSource ? (\r\n          <div className=\"flex w-full flex-col p-6\">\r\n            {!video ? (\r\n              <img\r\n                src={previewSource}\r\n                alt=\"Preview\"\r\n                className=\"h-full w-full rounded-md object-cover\"\r\n              />\r\n            ) : (\r\n              <Player aspectRatio=\"16:9\" playsInline src={previewSource} />\r\n            )}\r\n            {!viewData && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPreviewSource(\"\")\r\n                  setSelectedFile(null)\r\n                  setValue(name, null)\r\n                }}\r\n                className=\"mt-3 text-richblack-400 underline\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"flex w-full flex-col items-center p-6\"\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} ref={inputRef} />\r\n            <div className=\"grid aspect-square w-14 place-items-center rounded-full bg-pure-greys-800\">\r\n              <FiUploadCloud className=\"text-2xl text-yellow-50\" />\r\n            </div>\r\n            <p className=\"mt-2 max-w-[200px] text-center text-sm text-richblack-200\">\r\n              Drag and drop an {!video ? \"image\" : \"video\"}, or click to{\" \"}\r\n              <span className=\"font-semibold text-yellow-50\">Browse</span> a\r\n              file\r\n            </p>\r\n            <ul className=\"mt-10 flex list-disc justify-between space-x-12 text-center  text-xs text-richblack-200\">\r\n              <li>Aspect ratio 16:9</li>\r\n              <li>Recommended size 1024x576</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errors[name] && (\r\n        <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n          {label} is required\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\ChipInput.jsx",[],["565","566"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\RequirementsField.jsx",[],["567","568"],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\NestedView.jsx",[],[],"C:\\Projects\\SDE\\Study_Notion-main\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\SubSectionModal.jsx",["569"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { RxCross2 } from \"react-icons/rx\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  createSubSection,\r\n  updateSubSection,\r\n} from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse } from \"../../../../../slices/courseSlice\"\r\nimport IconBtn from \"../../../../Common/IconBtn\"\r\nimport Upload from \"../Upload\"\r\n\r\nexport default function SubSectionModal({\r\n  modalData,\r\n  setModalData,\r\n  add = false,\r\n  view = false,\r\n  edit = false,\r\n}) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm()\r\n\r\n  // console.log(\"view\", view)\r\n  // console.log(\"edit\", edit)\r\n  // console.log(\"add\", add)\r\n\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n\r\n  useEffect(() => {\r\n    if (view || edit) {\r\n      // console.log(\"modalData\", modalData)\r\n      setValue(\"lectureTitle\", modalData.title)\r\n      setValue(\"lectureDesc\", modalData.description)\r\n      setValue(\"lectureVideo\", modalData.videoUrl)\r\n    }\r\n  }, [])\r\n\r\n  // detect whether form is updated or not\r\n  const isFormUpdated = () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    if (\r\n      currentValues.lectureTitle !== modalData.title ||\r\n      currentValues.lectureDesc !== modalData.description ||\r\n      currentValues.lectureVideo !== modalData.videoUrl\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // handle the editing of subsection\r\n  const handleEditSubsection = async () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    const formData = new FormData()\r\n    // console.log(\"Values After Editing form values:\", currentValues)\r\n    formData.append(\"sectionId\", modalData.sectionId)\r\n    formData.append(\"subSectionId\", modalData._id)\r\n    if (currentValues.lectureTitle !== modalData.title) {\r\n      formData.append(\"title\", currentValues.lectureTitle)\r\n    }\r\n    if (currentValues.lectureDesc !== modalData.description) {\r\n      formData.append(\"description\", currentValues.lectureDesc)\r\n    }\r\n    if (currentValues.lectureVideo !== modalData.videoUrl) {\r\n      formData.append(\"video\", currentValues.lectureVideo)\r\n    }\r\n    setLoading(true)\r\n    const result = await updateSubSection(formData, token)\r\n    if (result) {\r\n      // console.log(\"result\", result)\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData.sectionId ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    // console.log(data)\r\n    if (view) return\r\n\r\n    if (edit) {\r\n      if (!isFormUpdated()) {\r\n        toast.error(\"No changes made to the form\")\r\n      } else {\r\n        handleEditSubsection()\r\n      }\r\n      return\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"sectionId\", modalData)\r\n    formData.append(\"title\", data.lectureTitle)\r\n    formData.append(\"description\", data.lectureDesc)\r\n    formData.append(\"video\", data.lectureVideo)\r\n    setLoading(true)\r\n    const result = await createSubSection(formData, token)\r\n    if (result) {\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[1000] !mt-0 grid h-screen w-screen place-items-center overflow-auto bg-white bg-opacity-10 backdrop-blur-sm\">\r\n      <div className=\"my-10 w-11/12 max-w-[700px] rounded-lg border border-richblack-400 bg-richblack-800\">\r\n        {/* Modal Header */}\r\n        <div className=\"flex items-center justify-between rounded-t-lg bg-richblack-700 p-5\">\r\n          <p className=\"text-xl font-semibold text-richblack-5\">\r\n            {view && \"Viewing\"} {add && \"Adding\"} {edit && \"Editing\"} Lecture\r\n          </p>\r\n          <button onClick={() => (!loading ? setModalData(null) : {})}>\r\n            <RxCross2 className=\"text-2xl text-richblack-5\" />\r\n          </button>\r\n        </div>\r\n        {/* Modal Form */}\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"space-y-8 px-8 py-10\"\r\n        >\r\n          {/* Lecture Video Upload */}\r\n          <Upload\r\n            name=\"lectureVideo\"\r\n            label=\"Lecture Video\"\r\n            register={register}\r\n            setValue={setValue}\r\n            errors={errors}\r\n            video={true}\r\n            viewData={view ? modalData.videoUrl : null}\r\n            editData={edit ? modalData.videoUrl : null}\r\n          />\r\n          {/* Lecture Title */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureTitle\">\r\n              Lecture Title {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <input\r\n              disabled={view || loading}\r\n              id=\"lectureTitle\"\r\n              placeholder=\"Enter Lecture Title\"\r\n              {...register(\"lectureTitle\", { required: true })}\r\n              className=\"form-style w-full\"\r\n            />\r\n            {errors.lectureTitle && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture title is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {/* Lecture Description */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureDesc\">\r\n              Lecture Description{\" \"}\r\n              {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <textarea\r\n              disabled={view || loading}\r\n              id=\"lectureDesc\"\r\n              placeholder=\"Enter Lecture Description\"\r\n              {...register(\"lectureDesc\", { required: true })}\r\n              className=\"form-style resize-x-none min-h-[130px] w-full\"\r\n            />\r\n            {errors.lectureDesc && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture Description is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {!view && (\r\n            <div className=\"flex justify-end\">\r\n              <IconBtn\r\n                disabled={loading}\r\n                text={loading ? \"Loading..\" : edit ? \"Save Changes\" : \"Save\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"570","severity":1,"message":"571","line":49,"column":6,"nodeType":"572","endLine":49,"endColumn":8,"suggestions":"573","suppressions":"574"},{"ruleId":"575","severity":1,"message":"576","line":105,"column":11,"nodeType":"577","messageId":"578","endLine":107,"endColumn":13},{"ruleId":"575","severity":1,"message":"576","line":116,"column":11,"nodeType":"577","messageId":"578","endLine":118,"endColumn":13},{"ruleId":"575","severity":1,"message":"579","line":130,"column":17,"nodeType":"577","messageId":"578","endLine":130,"endColumn":77},{"ruleId":"580","severity":1,"message":"581","line":65,"column":36,"nodeType":"582","messageId":"583","endLine":65,"endColumn":38},{"ruleId":"584","severity":1,"message":"585","line":91,"column":10,"nodeType":"586","messageId":"587","endLine":91,"endColumn":19},{"ruleId":"570","severity":1,"message":"588","line":35,"column":6,"nodeType":"572","endLine":35,"endColumn":8,"suggestions":"589","suppressions":"590"},{"ruleId":"570","severity":1,"message":"591","line":22,"column":6,"nodeType":"572","endLine":22,"endColumn":8,"suggestions":"592","suppressions":"593"},{"ruleId":"570","severity":1,"message":"594","line":28,"column":6,"nodeType":"572","endLine":28,"endColumn":8,"suggestions":"595"},{"ruleId":"584","severity":1,"message":"596","line":3,"column":10,"nodeType":"586","messageId":"587","endLine":3,"endColumn":31},{"ruleId":"570","severity":1,"message":"594","line":33,"column":6,"nodeType":"572","endLine":33,"endColumn":8,"suggestions":"597","suppressions":"598"},{"ruleId":"570","severity":1,"message":"594","line":24,"column":6,"nodeType":"572","endLine":24,"endColumn":8,"suggestions":"599","suppressions":"600"},{"ruleId":"570","severity":1,"message":"601","line":48,"column":6,"nodeType":"572","endLine":48,"endColumn":62,"suggestions":"602"},{"ruleId":"584","severity":1,"message":"603","line":6,"column":3,"nodeType":"586","messageId":"587","endLine":6,"endColumn":21},{"ruleId":"570","severity":1,"message":"588","line":30,"column":6,"nodeType":"572","endLine":30,"endColumn":8,"suggestions":"604","suppressions":"605"},{"ruleId":"584","severity":1,"message":"606","line":3,"column":10,"nodeType":"586","messageId":"587","endLine":3,"endColumn":33},{"ruleId":"584","severity":1,"message":"607","line":1,"column":10,"nodeType":"586","messageId":"587","endLine":1,"endColumn":18},{"ruleId":"584","severity":1,"message":"608","line":3,"column":10,"nodeType":"586","messageId":"587","endLine":3,"endColumn":19},{"ruleId":"584","severity":1,"message":"609","line":3,"column":21,"nodeType":"586","messageId":"587","endLine":3,"endColumn":27},{"ruleId":"584","severity":1,"message":"610","line":4,"column":8,"nodeType":"586","messageId":"587","endLine":4,"endColumn":18},{"ruleId":"584","severity":1,"message":"611","line":1,"column":17,"nodeType":"586","messageId":"587","endLine":1,"endColumn":26},{"ruleId":"584","severity":1,"message":"612","line":1,"column":28,"nodeType":"586","messageId":"587","endLine":1,"endColumn":36},{"ruleId":"575","severity":1,"message":"579","line":34,"column":15,"nodeType":"577","messageId":"578","endLine":34,"endColumn":67},{"ruleId":"570","severity":1,"message":"613","line":26,"column":6,"nodeType":"572","endLine":26,"endColumn":8,"suggestions":"614","suppressions":"615"},{"ruleId":"570","severity":1,"message":"616","line":13,"column":6,"nodeType":"572","endLine":13,"endColumn":16,"suggestions":"617"},{"ruleId":"570","severity":1,"message":"618","line":39,"column":6,"nodeType":"572","endLine":39,"endColumn":62,"suggestions":"619","suppressions":"620"},{"ruleId":"584","severity":1,"message":"621","line":28,"column":10,"nodeType":"586","messageId":"587","endLine":28,"endColumn":18},{"ruleId":"584","severity":1,"message":"622","line":4,"column":10,"nodeType":"586","messageId":"587","endLine":4,"endColumn":19},{"ruleId":"584","severity":1,"message":"623","line":4,"column":21,"nodeType":"586","messageId":"587","endLine":4,"endColumn":34},{"ruleId":"584","severity":1,"message":"624","line":22,"column":9,"nodeType":"586","messageId":"587","endLine":22,"endColumn":17},{"ruleId":"584","severity":1,"message":"625","line":21,"column":13,"nodeType":"586","messageId":"587","endLine":21,"endColumn":16},{"ruleId":"584","severity":1,"message":"611","line":1,"column":17,"nodeType":"586","messageId":"587","endLine":1,"endColumn":26},{"ruleId":"584","severity":1,"message":"626","line":1,"column":28,"nodeType":"586","messageId":"587","endLine":1,"endColumn":34},{"ruleId":"584","severity":1,"message":"612","line":1,"column":36,"nodeType":"586","messageId":"587","endLine":1,"endColumn":44},{"ruleId":"584","severity":1,"message":"627","line":2,"column":10,"nodeType":"586","messageId":"587","endLine":2,"endColumn":23},{"ruleId":"570","severity":1,"message":"628","line":60,"column":6,"nodeType":"572","endLine":60,"endColumn":8,"suggestions":"629","suppressions":"630"},{"ruleId":"570","severity":1,"message":"631","line":24,"column":6,"nodeType":"572","endLine":24,"endColumn":8,"suggestions":"632"},{"ruleId":"584","severity":1,"message":"633","line":19,"column":11,"nodeType":"586","messageId":"587","endLine":19,"endColumn":17},{"ruleId":"570","severity":1,"message":"634","line":53,"column":6,"nodeType":"572","endLine":53,"endColumn":16,"suggestions":"635","suppressions":"636"},{"ruleId":"570","severity":1,"message":"634","line":58,"column":6,"nodeType":"572","endLine":58,"endColumn":30,"suggestions":"637","suppressions":"638"},{"ruleId":"570","severity":1,"message":"639","line":30,"column":6,"nodeType":"572","endLine":30,"endColumn":8,"suggestions":"640","suppressions":"641"},{"ruleId":"570","severity":1,"message":"642","line":35,"column":6,"nodeType":"572","endLine":35,"endColumn":13,"suggestions":"643","suppressions":"644"},{"ruleId":"570","severity":1,"message":"645","line":22,"column":6,"nodeType":"572","endLine":22,"endColumn":8,"suggestions":"646","suppressions":"647"},{"ruleId":"570","severity":1,"message":"642","line":27,"column":6,"nodeType":"572","endLine":27,"endColumn":24,"suggestions":"648","suppressions":"649"},{"ruleId":"570","severity":1,"message":"650","line":46,"column":6,"nodeType":"572","endLine":46,"endColumn":8,"suggestions":"651"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["652"],["653"],"react/jsx-pascal-case","Imported JSX component Course_Slider must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Course_Card must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'course_id' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'courseId', 'dispatch', and 'token'. Either include them or remove the dependency array.",["654"],["655"],"React Hook useEffect has missing dependencies: 'navigate' and 'signupData'. Either include them or remove the dependency array.",["656"],["657"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["658"],"'BiDotsVerticalRounded' is defined but never used.",["659"],["660"],["661"],["662"],"React Hook useEffect has missing dependencies: 'courseId', 'navigate', 'sectionId', and 'subSectionId'. Either include them or remove the dependency array.",["663"],"'fetchCourseDetails' is defined but never used.",["664"],["665"],"'updateCompletedLectures' is defined but never used.","'FcGoogle' is defined but never used.","'FaRegStar' is defined but never used.","'FaStar' is defined but never used.","'ReactStars' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["666"],["667"],"React Hook useEffect has a missing dependency: 'course._id'. Either include it or remove the dependency array. If 'setActive' needs the current value of 'course._id', you can also switch to useReducer instead of useState and read 'course._id' in the reducer.",["668"],"React Hook useEffect has missing dependencies: 'sectionId' and 'subSectionId'. Either include them or remove the dependency array.",["669"],["670"],"'courseId' is assigned a value but never used.","'setCourse' is defined but never used.","'setEditCourse' is defined but never used.","'dispatch' is assigned a value but never used.","'res' is assigned a value but never used.","'useRef' is defined but never used.","'AiOutlineDown' is defined but never used.","React Hook useEffect has missing dependencies: 'course.category', 'course.courseDescription', 'course.courseName', 'course.instructions', 'course.price', 'course.tag', 'course.thumbnail', 'course.whatYouWillLearn', 'editCourse', and 'setValue'. Either include them or remove the dependency array.",["671"],["672"],"React Hook useEffect has missing dependencies: 'course?.status' and 'setValue'. Either include them or remove the dependency array.",["673"],"'course' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["674"],["675"],["676"],["677"],"React Hook useEffect has missing dependencies: 'course?.tag', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["678"],["679"],"React Hook useEffect has missing dependencies: 'name' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["680"],["681"],"React Hook useEffect has missing dependencies: 'course?.instructions', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["682"],["683"],["684"],["685"],"React Hook useEffect has missing dependencies: 'edit', 'modalData.description', 'modalData.title', 'modalData.videoUrl', 'setValue', and 'view'. Either include them or remove the dependency array.",["686"],{"desc":"687","fix":"688"},{"kind":"689","justification":"690"},{"desc":"691","fix":"692"},{"kind":"689","justification":"690"},{"desc":"693","fix":"694"},{"kind":"689","justification":"690"},{"desc":"695","fix":"696"},{"desc":"695","fix":"697"},{"kind":"689","justification":"690"},{"desc":"695","fix":"698"},{"kind":"689","justification":"690"},{"desc":"699","fix":"700"},{"desc":"691","fix":"701"},{"kind":"689","justification":"690"},{"desc":"702","fix":"703"},{"kind":"689","justification":"690"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"kind":"689","justification":"690"},{"desc":"708","fix":"709"},{"kind":"689","justification":"690"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"kind":"689","justification":"690"},{"desc":"714","fix":"715"},{"kind":"689","justification":"690"},{"desc":"716","fix":"717"},{"kind":"689","justification":"690"},{"desc":"718","fix":"719"},{"kind":"689","justification":"690"},{"desc":"720","fix":"721"},{"kind":"689","justification":"690"},{"desc":"722","fix":"723"},{"kind":"689","justification":"690"},{"desc":"724","fix":"725"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"726","text":"727"},"directive","","Update the dependencies array to be: [courseId, dispatch, token]",{"range":"728","text":"729"},"Update the dependencies array to be: [navigate, signupData]",{"range":"730","text":"731"},"Update the dependencies array to be: [token]",{"range":"732","text":"733"},{"range":"734","text":"733"},{"range":"735","text":"733"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",{"range":"736","text":"737"},{"range":"738","text":"729"},"Update the dependencies array to be: [setValue]",{"range":"739","text":"740"},"Update the dependencies array to be: [course._id, isActive]",{"range":"741","text":"742"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",{"range":"743","text":"744"},"Update the dependencies array to be: [course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",{"range":"745","text":"746"},"Update the dependencies array to be: [course?.status, setValue]",{"range":"747","text":"748"},"Update the dependencies array to be: [name, register]",{"range":"749","text":"750"},"Update the dependencies array to be: [name, selectedFile, setValue]",{"range":"751","text":"752"},"Update the dependencies array to be: [course?.tag, editCourse, name, register]",{"range":"753","text":"754"},"Update the dependencies array to be: [chips, name, setValue]",{"range":"755","text":"756"},"Update the dependencies array to be: [course?.instructions, editCourse, name, register]",{"range":"757","text":"758"},"Update the dependencies array to be: [name, requirementsList, setValue]",{"range":"759","text":"760"},"Update the dependencies array to be: [edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]",{"range":"761","text":"762"},[1987,1989],"[dispatch, navigate]",[1439,1441],"[courseId, dispatch, token]",[834,836],"[navigate, signupData]",[1078,1080],"[token]",[1180,1182],[822,824],[1886,1942],"[courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",[1044,1046],[864,866],"[setValue]",[422,432],"[course._id, isActive]",[1409,1465],"[courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",[2123,2125],"[course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",[946,948],"[course?.status, setValue]",[1390,1400],"[name, register]",[1526,1550],"[name, selectedFile, setValue]",[858,860],"[course?.tag, editCourse, name, register]",[979,986],"[chips, name, setValue]",[647,649],"[course?.instructions, editCourse, name, register]",[779,797],"[name, requirementsList, setValue]",[1299,1301],"[edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]"]